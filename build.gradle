buildscript {
	ext {
		protobufVersion = '3.19.1'
		protobufPluginVersion = '0.9.1'
		grpcVersion = '1.42.1'
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.protobuf' version "${protobufPluginVersion}"
}
repositories {
	mavenCentral()
}
group = 'com.authentiactionservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'io.grpc:grpc-netty-shaded:1.52.1'
	implementation 'io.grpc:grpc-protobuf:1.52.1'
	implementation 'io.grpc:grpc-stub:1.52.1'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'io.github.lognet:grpc-spring-boot-starter:5.0.0'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
	//Validation
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'jakarta.el:jakarta.el-api:5.0.1'
	implementation 'org.hibernate:hibernate-validator-cdi:8.0.0.Final'
	implementation 'org.glassfish:jakarta.el:4.0.1'
	compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	//Lombok
	implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.named('test') {
	useJUnitPlatform()
}
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.21.7"
	}
	generatedFilesBaseDir = "$projectDir/src/main/proto"
	clean {
		delete generatedFilesBaseDir
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.52.1'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}